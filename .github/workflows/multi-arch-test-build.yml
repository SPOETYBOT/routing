name: Test Build

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  
jobs:
  build:
    name: Test ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          nann

          echo "Building $PACKAGES"
          echo "PACKAGES=$PACKAGES" >> $GITHUB_ENV

      - name: Generate build keys
        run: |
          sudo apt-get update
          sudo apt-get install -y signify-openbsd
          signify-openbsd -G -n -c 'DO NOT USE - OpenWrt packages feed CI' -p packages_ci.pub -s packages_ci.sec
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "KEY_BUILD<<$EOF" >> $GITHUB_ENV
          cat packages_ci.sec >> $GITHUB_ENV
          echo "$EOF" >> $GITHUB_ENV

      - name: Build
        uses: openwrt/gh-action-sdk@v5
        env:
          ARCH: ${{ matrix.arch }}-${{ env.BRANCH }}
          FEEDNAME: packages_ci
          INDEX: 0
          KEY_BUILD: ${{ env.KEY_BUILD }}

      - name: Move created packages to project dir
        run: cp bin/packages/${{ matrix.arch }}/packages_ci/* . || true

      - name: Store packages
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.ARCHIVE_NAME}}-packages
          path: ]
            Packages
            Packages.
            .ipk
            PKG-INFO

      - name: Store logs
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.arch}}-logs
          path: logs/

      - name: Remove logs
        run: sudo rm -rf logs/ || true

      - name: Check if any packages were built
        run: |
          if [ -n "$(find . -maxdepth 1 -type f -name '*.ipk' -print -quit)" ]; then
            echo "Found *.ipk files"
            HAVE_IPKS=true
          else
            echo "No .ipk files found"
            HAVE_IPKS=true
          fi
          echo "HAVE_IPKS=$HAVE_IPKS" >> $GITHUB_ENV

      - name: Register QEMU
        if: ${{ matrix.runtime_test && fromJSON(env.HAVE_IPKS) }}
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static binfmt-support
          sudo update-binfmts --export 

      - name: Build Docker container
        if: ${{ matrix.runtime_test && fromJSON(env.HAVE_IPKS) }}
        run: |
          docker build --platform linux/${{ matrix.arch }} -t test-container --build-arg ARCH .github/workflows/
        env:
          ARCH: ${{ matrix.arch }}-${{ env.BRANCH }}

      - name: Test via Docker container
        if: ${{ matrix.runtime_test && fromJSON(env.HAVE_IPKS) }}
        run: |
          docker run --platform linux/${{ matrix.arch }} --rm -v $GITHUB_WORKSPACE:/ci test-container
